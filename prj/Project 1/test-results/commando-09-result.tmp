(TEST 9) ls and table.sh
COMMENTS:
Calls ls and runs the test_data/table.sh command to see if their
output is properly captured.


program: ./commando --echo
Failure messages:
- FAILURE(139) due to Kill Signal from OS: likely a SEGFAULT occured
- FAILURE: Valgrind reports reachable memory, may need to add free() or fclose()
- FAILURE: Output Mismatch at lines marked

--- Side by Side Differences ---
- Expect output in: test-results/raw/commando-09-expect.tmp
- Actual output in: test-results/raw/commando-09-actual.tmp
- Differing lines have a character like '|' '>' or '<' in the middle
==== EXPECT ====                                                 ==== ACTUAL ====                                              
@> ls -a -F test_data/stuff/                                   | @>
@> test_data/table.sh                                          <
@> wait-for 0                                                  <
@> wait-for 1                                                  <
@> list                                                        <
JOB  #PID      STAT   STR_STAT OUTB COMMAND                    <
0    %0           0    EXIT(0)   55 ls -a -F test_data/stuff/  <
1    %1           0    EXIT(0) 1140 test_data/table.sh         <
@> output-for 0                                                <
@<<< Output for ls[%0] (55 bytes):                             <
----------------------------------------                       <
./                                                             <
../                                                            <
empty                                                          <
gettysburg.txt                                                 <
quote.txt                                                      <
table.sh*                                                      <
util.o                                                         <
----------------------------------------                       <
@> output-for 1                                                <
@<<< Output for test_data/table.sh[%1] (1140 bytes):           <
----------------------------------------                       <
i^1=      1  i^2=      1  i^3=      1                          <
i^1=      2  i^2=      4  i^3=      8                          <
i^1=      3  i^2=      9  i^3=     27                          <
i^1=      4  i^2=     16  i^3=     64                          <
i^1=      5  i^2=     25  i^3=    125                          <
i^1=      6  i^2=     36  i^3=    216                          <
i^1=      7  i^2=     49  i^3=    343                          <
i^1=      8  i^2=     64  i^3=    512                          <
i^1=      9  i^2=     81  i^3=    729                          <
i^1=     10  i^2=    100  i^3=   1000                          <
i^1=     11  i^2=    121  i^3=   1331                          <
i^1=     12  i^2=    144  i^3=   1728                          <
i^1=     13  i^2=    169  i^3=   2197                          <
i^1=     14  i^2=    196  i^3=   2744                          <
i^1=     15  i^2=    225  i^3=   3375                          <
i^1=     16  i^2=    256  i^3=   4096                          <
i^1=     17  i^2=    289  i^3=   4913                          <
i^1=     18  i^2=    324  i^3=   5832                          <
i^1=     19  i^2=    361  i^3=   6859                          <
i^1=     20  i^2=    400  i^3=   8000                          <
i^1=     21  i^2=    441  i^3=   9261                          <
i^1=     22  i^2=    484  i^3=  10648                          <
i^1=     23  i^2=    529  i^3=  12167                          <
i^1=     24  i^2=    576  i^3=  13824                          <
i^1=     25  i^2=    625  i^3=  15625                          <
i^1=     26  i^2=    676  i^3=  17576                          <
i^1=     27  i^2=    729  i^3=  19683                          <
i^1=     28  i^2=    784  i^3=  21952                          <
i^1=     29  i^2=    841  i^3=  24389                          <
i^1=     30  i^2=    900  i^3=  27000                          <
----------------------------------------                       <
@> exit                                                        <
ALERTS:                                                          ALERTS:
@!!! ls[%0]: EXIT(0)                                           <
@!!! test_data/table.sh[%1]: EXIT(0)                           <
                                                               <
--- Line Differences ---
EXPECT:   1) @> ls -a -F test_data/stuff/
EXPECT:   2) @> test_data/table.sh
EXPECT:   3) @> wait-for 0
EXPECT:   4) @> wait-for 1
EXPECT:   5) @> list
EXPECT:   6) JOB  #PID      STAT   STR_STAT OUTB COMMAND
EXPECT:   7) 0    %0           0    EXIT(0)   55 ls -a -F test_data/stuff/ 
EXPECT:   8) 1    %1           0    EXIT(0) 1140 test_data/table.sh 
EXPECT:   9) @> output-for 0
EXPECT:  10) @<<< Output for ls[%0] (55 bytes):
EXPECT:  11) ----------------------------------------
EXPECT:  12) ./
EXPECT:  13) ../
EXPECT:  14) empty
EXPECT:  15) gettysburg.txt
EXPECT:  16) quote.txt
EXPECT:  17) table.sh*
EXPECT:  18) util.o
EXPECT:  19) ----------------------------------------
EXPECT:  20) @> output-for 1
EXPECT:  21) @<<< Output for test_data/table.sh[%1] (1140 bytes):
EXPECT:  22) ----------------------------------------
EXPECT:  23) i^1=      1  i^2=      1  i^3=      1
EXPECT:  24) i^1=      2  i^2=      4  i^3=      8
EXPECT:  25) i^1=      3  i^2=      9  i^3=     27
EXPECT:  26) i^1=      4  i^2=     16  i^3=     64
EXPECT:  27) i^1=      5  i^2=     25  i^3=    125
EXPECT:  28) i^1=      6  i^2=     36  i^3=    216
EXPECT:  29) i^1=      7  i^2=     49  i^3=    343
EXPECT:  30) i^1=      8  i^2=     64  i^3=    512
EXPECT:  31) i^1=      9  i^2=     81  i^3=    729
EXPECT:  32) i^1=     10  i^2=    100  i^3=   1000
EXPECT:  33) i^1=     11  i^2=    121  i^3=   1331
EXPECT:  34) i^1=     12  i^2=    144  i^3=   1728
EXPECT:  35) i^1=     13  i^2=    169  i^3=   2197
EXPECT:  36) i^1=     14  i^2=    196  i^3=   2744
EXPECT:  37) i^1=     15  i^2=    225  i^3=   3375
EXPECT:  38) i^1=     16  i^2=    256  i^3=   4096
EXPECT:  39) i^1=     17  i^2=    289  i^3=   4913
EXPECT:  40) i^1=     18  i^2=    324  i^3=   5832
EXPECT:  41) i^1=     19  i^2=    361  i^3=   6859
EXPECT:  42) i^1=     20  i^2=    400  i^3=   8000
EXPECT:  43) i^1=     21  i^2=    441  i^3=   9261
EXPECT:  44) i^1=     22  i^2=    484  i^3=  10648
EXPECT:  45) i^1=     23  i^2=    529  i^3=  12167
EXPECT:  46) i^1=     24  i^2=    576  i^3=  13824
EXPECT:  47) i^1=     25  i^2=    625  i^3=  15625
EXPECT:  48) i^1=     26  i^2=    676  i^3=  17576
EXPECT:  49) i^1=     27  i^2=    729  i^3=  19683
EXPECT:  50) i^1=     28  i^2=    784  i^3=  21952
EXPECT:  51) i^1=     29  i^2=    841  i^3=  24389
EXPECT:  52) i^1=     30  i^2=    900  i^3=  27000
EXPECT:  53) ----------------------------------------
EXPECT:  54) @> exit
ACTUAL:   1) @>
EXPECT:  56) @!!! ls[%0]: EXIT(0)
EXPECT:  57) @!!! test_data/table.sh[%1]: EXIT(0)
EXPECT:  58) 

--- Valgrind Log from: test-results/raw/commando-09-valgrd.tmp ---
==21271== Memcheck, a memory error detector
==21271== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==21271== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==21271== Command: ./commando --echo
==21271== Parent PID: 21270
==21271== 
==21271== Invalid write of size 1
==21271==    at 0x48DDA01: _IO_getline_info (iogetline.c:77)
==21271==    by 0x48DC849: fgets (iofgets.c:53)
==21271==    by 0x1095CC: main (commando.c:37)
==21271==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==21271== 
==21271== 
==21271== Process terminating with default action of signal 11 (SIGSEGV)
==21271==  Access not within mapped region at address 0x0
==21271==    at 0x48DDA01: _IO_getline_info (iogetline.c:77)
==21271==    by 0x48DC849: fgets (iofgets.c:53)
==21271==    by 0x1095CC: main (commando.c:37)
==21271==  If you believe this happened as a result of a stack
==21271==  overflow in your program's main thread (unlikely but
==21271==  possible), you can try to increase the size of the
==21271==  main thread stack using the --main-stacksize= flag.
==21271==  The main thread stack size used in this run was 8388608.
==21271== 
==21271== HEAP SUMMARY:
==21271==     in use at exit: 8,200 bytes in 1 blocks
==21271==   total heap usage: 1 allocs, 0 frees, 8,200 bytes allocated
==21271== 
==21271== 8,200 bytes in 1 blocks are still reachable in loss record 1 of 1
==21271==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==21271==    by 0x109599: main (commando.c:33)
==21271== 
==21271== LEAK SUMMARY:
==21271==    definitely lost: 0 bytes in 0 blocks
==21271==    indirectly lost: 0 bytes in 0 blocks
==21271==      possibly lost: 0 bytes in 0 blocks
==21271==    still reachable: 8,200 bytes in 1 blocks
==21271==         suppressed: 0 bytes in 0 blocks
==21271== 
==21271== For lists of detected and suppressed errors, rerun with: -s
==21271== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

