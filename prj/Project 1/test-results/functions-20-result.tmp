(TEST 20) cmdcol_print_2
COMMENTS:

program: ./test_cmd cmdcol_print_2
Failure messages:
- FAILURE(13): Valgrind detected errors
- FAILURE: Output Mismatch at lines marked

--- Side by Side Differences ---
- Expect output in: test-results/raw/functions-20-expect.tmp
- Actual output in: test-results/raw/functions-20-actual.tmp
- Differing lines have a character like '|' '>' or '<' in the middle
==== EXPECT ====                                                                          ==== ACTUAL ====                                                                       
{                                                                                         {
    // Adds to a cmd collection, runs commands, and                                           // Adds to a cmd collection, runs commands, and
    // the prints showing most commands in the RUN                                            // the prints showing most commands in the RUN
    // state. Then waits for them to complete via                                             // state. Then waits for them to complete via
    // cmdcol_update_state(). Calls cmdcol_print() to                                         // cmdcol_update_state(). Calls cmdcol_print() to
    // show most commands in EXIT(..) state.                                                  // show most commands in EXIT(..) state.
    char *children[][5] = {                                                                   char *children[][5] = {
      {"cat","test_data/quote.txt",NULL},                                                       {"cat","test_data/quote.txt",NULL},    
      {"ls","-a","test_data/stuff",NULL},                                                       {"ls","-a","test_data/stuff",NULL},
      {"grep","-i", "flurbo ","test_data/gettysburg.txt",NULL},                                 {"grep","-i", "flurbo ","test_data/gettysburg.txt",NULL},
      {"ls","-a","-F","test_data/stuff",NULL},                                                  {"ls","-a","-F","test_data/stuff",NULL},
      {"gcc","-o","test_data/print_args",                                                       {"gcc","-o","test_data/print_args",
                   "test_data/print_args.c",NULL},                                                           "test_data/print_args.c",NULL},
      {NULL},                                                                                   {NULL},
    };                                                                                        };
    cmdcol_t cmdcol_actual = {};                                                              cmdcol_t cmdcol_actual = {};
    cmdcol_t *cmdcol = &cmdcol_actual;                                                        cmdcol_t *cmdcol = &cmdcol_actual;
    for(int i=0; children[i][0] != NULL; i++){                                                for(int i=0; children[i][0] != NULL; i++){
      cmd_t *cmd = cmd_new(children[i]);                                                        cmd_t *cmd = cmd_new(children[i]);
      cmdcol_add(cmdcol, cmd);                                                                  cmdcol_add(cmdcol, cmd);
      cmd_start(cmd);                                                                           cmd_start(cmd);
    }                                                                                         }
    printf("Before cmdcol_update_state()\n");                                                 printf("Before cmdcol_update_state()\n");
    cmdcol_print(cmdcol);       // RUN                                                        cmdcol_print(cmdcol);       // RUN

    cmdcol_update_state(cmdcol, DOBLOCK);                                                     cmdcol_update_state(cmdcol, DOBLOCK);

    printf("\n");                                                                             printf("\n");
    printf("After cmdcol_update_state()\n");                                                  printf("After cmdcol_update_state()\n");
    cmdcol_print(cmdcol);       // EXIT(..)                                                   cmdcol_print(cmdcol);       // EXIT(..)
    cmdcol_freeall(cmdcol);                                                                   cmdcol_freeall(cmdcol);
}                                                                                         }
Before cmdcol_update_state()                                                              Before cmdcol_update_state()
JOB  #PID      STAT   STR_STAT OUTB COMMAND                                               JOB  #PID      STAT   STR_STAT OUTB COMMAND
0    %0          -1        RUN   -1 cat test_data/quote.txt                               0    %0          -1        RUN   -1 cat test_data/quote.txt
1    %1          -1        RUN   -1 ls -a test_data/stuff                                 1    %1          -1        RUN   -1 ls -a test_data/stuff
2    %2          -1        RUN   -1 grep -i flurbo  test_data/gettysburg.txt              2    %2          -1        RUN   -1 grep -i flurbo  test_data/gettysburg.txt
3    %3          -1        RUN   -1 ls -a -F test_data/stuff                              3    %3          -1        RUN   -1 ls -a -F test_data/stuff
4    %4          -1        RUN   -1 gcc -o test_data/print_args test_data/print_args.c    4    %4          -1        RUN   -1 gcc -o test_data/print_args test_data/print_args.c
                                                                                        > cat[%0]: EXIT(0)
                                                                                        > ls[%1]: EXIT(0)
                                                                                        > grep[%2]: EXIT(1)
                                                                                        > ls[%3]: EXIT(0)
                                                                                        > gcc[%4]: EXIT(0)

After cmdcol_update_state()                                                               After cmdcol_update_state()
JOB  #PID      STAT   STR_STAT OUTB COMMAND                                               JOB  #PID      STAT   STR_STAT OUTB COMMAND
0    %0           0    EXIT(0)  125 cat test_data/quote.txt                             | 0    %0           0        RUN   -1 cat test_data/quote.txt
1    %1           0    EXIT(0)   52 ls -a test_data/stuff                               | 1    %1           0        RUN   -1 ls -a test_data/stuff
2    %2           1    EXIT(1)    0 grep -i flurbo  test_data/gettysburg.txt            | 2    %2           1        RUN   -1 grep -i flurbo  test_data/gettysburg.txt
3    %3           0    EXIT(0)   55 ls -a -F test_data/stuff                            | 3    %3           0        RUN   -1 ls -a -F test_data/stuff
4    %4           0    EXIT(0)    0 gcc -o test_data/print_args test_data/print_args.c  | 4    %4           0        RUN   -1 gcc -o test_data/print_args test_data/print_args.c
ALERTS:                                                                                   ALERTS:
@!!! cat[%0]: EXIT(0)                                                                   <
@!!! ls[%1]: EXIT(0)                                                                    <
@!!! grep[%2]: EXIT(1)                                                                  <
@!!! ls[%3]: EXIT(0)                                                                    <
@!!! gcc[%4]: EXIT(0)                                                                   <
                                                                                        <
--- Line Differences ---
ACTUAL:  40) cat[%0]: EXIT(0)
ACTUAL:  41) ls[%1]: EXIT(0)
ACTUAL:  42) grep[%2]: EXIT(1)
ACTUAL:  43) ls[%3]: EXIT(0)
ACTUAL:  44) gcc[%4]: EXIT(0)
EXPECT:  43) 0    %0           0    EXIT(0)  125 cat test_data/quote.txt 
EXPECT:  44) 1    %1           0    EXIT(0)   52 ls -a test_data/stuff 
EXPECT:  45) 2    %2           1    EXIT(1)    0 grep -i flurbo  test_data/gettysburg.txt 
EXPECT:  46) 3    %3           0    EXIT(0)   55 ls -a -F test_data/stuff 
EXPECT:  47) 4    %4           0    EXIT(0)    0 gcc -o test_data/print_args test_data/print_args.c 
ACTUAL:  48) 0    %0           0        RUN   -1 cat test_data/quote.txt
ACTUAL:  49) 1    %1           0        RUN   -1 ls -a test_data/stuff
ACTUAL:  50) 2    %2           1        RUN   -1 grep -i flurbo  test_data/gettysburg.txt
ACTUAL:  51) 3    %3           0        RUN   -1 ls -a -F test_data/stuff
ACTUAL:  52) 4    %4           0        RUN   -1 gcc -o test_data/print_args test_data/print_args.c
EXPECT:  49) @!!! cat[%0]: EXIT(0)
EXPECT:  50) @!!! ls[%1]: EXIT(0)
EXPECT:  51) @!!! grep[%2]: EXIT(1)
EXPECT:  52) @!!! ls[%3]: EXIT(0)
EXPECT:  53) @!!! gcc[%4]: EXIT(0)
EXPECT:  54) 

--- Valgrind Log from: test-results/raw/functions-20-valgrd.tmp ---
==20949== Memcheck, a memory error detector
==20949== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==20949== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==20949== Command: ./test_cmd cmdcol_print_2
==20949== Parent PID: 20948
==20949== 
==20952== Syscall param execve(argv) points to uninitialised byte(s)
==20952==    at 0x493D2FB: execve (syscall-template.S:78)
==20952==    by 0x493DCEE: __execvpe_common (execvpe.c:136)
==20952==    by 0x493DCEE: execvpe (execvpe.c:190)
==20952==    by 0x10B4CE: cmd_start (cmd.c:85)
==20952==    by 0x10B14C: main (test_cmd.c:482)
==20952==  Address 0x4a4c150 is 272 bytes inside a block of size 2,352 alloc'd
==20952==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==20952==    by 0x10B23B: cmd_new (cmd.c:25)
==20952==    by 0x10B11D: main (test_cmd.c:480)
==20952==  Uninitialised value was created by a heap allocation
==20952==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==20952==    by 0x10B23B: cmd_new (cmd.c:25)
==20952==    by 0x10B11D: main (test_cmd.c:480)
==20952== 
==20953== Syscall param execve(argv) points to uninitialised byte(s)
==20953==    at 0x493D2FB: execve (syscall-template.S:78)
==20953==    by 0x493DCEE: __execvpe_common (execvpe.c:136)
==20953==    by 0x493DCEE: execvpe (execvpe.c:190)
==20953==    by 0x10B4CE: cmd_start (cmd.c:85)
==20953==    by 0x10B14C: main (test_cmd.c:482)
==20953==  Address 0x4a4cd48 is 280 bytes inside a block of size 2,352 alloc'd
==20953==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==20953==    by 0x10B23B: cmd_new (cmd.c:25)
==20953==    by 0x10B11D: main (test_cmd.c:480)
==20953==  Uninitialised value was created by a heap allocation
==20953==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==20953==    by 0x10B23B: cmd_new (cmd.c:25)
==20953==    by 0x10B11D: main (test_cmd.c:480)
==20953== 
==20954== Syscall param execve(argv) points to uninitialised byte(s)
==20954==    at 0x493D2FB: execve (syscall-template.S:78)
==20954==    by 0x493DCEE: __execvpe_common (execvpe.c:136)
==20954==    by 0x493DCEE: execvpe (execvpe.c:190)
==20954==    by 0x10B4CE: cmd_start (cmd.c:85)
==20954==    by 0x10B14C: main (test_cmd.c:482)
==20954==  Address 0x4a4da80 is 288 bytes inside a block of size 2,352 alloc'd
==20954==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==20954==    by 0x10B23B: cmd_new (cmd.c:25)
==20954==    by 0x10B11D: main (test_cmd.c:480)
==20954==  Uninitialised value was created by a heap allocation
==20954==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==20954==    by 0x10B23B: cmd_new (cmd.c:25)
==20954==    by 0x10B11D: main (test_cmd.c:480)
==20954== 
==20955== Syscall param execve(argv) points to uninitialised byte(s)
==20955==    at 0x493D2FB: execve (syscall-template.S:78)
==20955==    by 0x493DCEE: __execvpe_common (execvpe.c:136)
==20955==    by 0x493DCEE: execvpe (execvpe.c:190)
==20955==    by 0x10B4CE: cmd_start (cmd.c:85)
==20955==    by 0x10B14C: main (test_cmd.c:482)
==20955==  Address 0x4a4e8f0 is 288 bytes inside a block of size 2,352 alloc'd
==20955==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==20955==    by 0x10B23B: cmd_new (cmd.c:25)
==20955==    by 0x10B11D: main (test_cmd.c:480)
==20955==  Uninitialised value was created by a heap allocation
==20955==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==20955==    by 0x10B23B: cmd_new (cmd.c:25)
==20955==    by 0x10B11D: main (test_cmd.c:480)
==20955== 
==20956== Syscall param execve(argv) points to uninitialised byte(s)
==20956==    at 0x493D2FB: execve (syscall-template.S:78)
==20956==    by 0x493DCEE: __execvpe_common (execvpe.c:136)
==20956==    by 0x493DCEE: execvpe (execvpe.c:190)
==20956==    by 0x10B4CE: cmd_start (cmd.c:85)
==20956==    by 0x10B14C: main (test_cmd.c:482)
==20956==  Address 0x4a4f760 is 288 bytes inside a block of size 2,352 alloc'd
==20956==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==20956==    by 0x10B23B: cmd_new (cmd.c:25)
==20956==    by 0x10B11D: main (test_cmd.c:480)
==20956==  Uninitialised value was created by a heap allocation
==20956==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==20956==    by 0x10B23B: cmd_new (cmd.c:25)
==20956==    by 0x10B11D: main (test_cmd.c:480)
==20956== 
==20949== Conditional jump or move depends on uninitialised value(s)
==20949==    at 0x10B8FA: cmdcol_print (cmdcol.c:43)
==20949==    by 0x10B19A: main (test_cmd.c:485)
==20949==  Uninitialised value was created by a heap allocation
==20949==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==20949==    by 0x10B23B: cmd_new (cmd.c:25)
==20949==    by 0x10B11D: main (test_cmd.c:480)
==20949== 
==20949== Conditional jump or move depends on uninitialised value(s)
==20949==    at 0x10B8FA: cmdcol_print (cmdcol.c:43)
==20949==    by 0x10B1D3: main (test_cmd.c:491)
==20949==  Uninitialised value was created by a heap allocation
==20949==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==20949==    by 0x10B23B: cmd_new (cmd.c:25)
==20949==    by 0x10B11D: main (test_cmd.c:480)
==20949== 
==20949== 
==20949== HEAP SUMMARY:
==20949==     in use at exit: 4,340 bytes in 22 blocks
==20949==   total heap usage: 27 allocs, 5 frees, 16,100 bytes allocated
==20949== 
==20949== 5 bytes in 5 blocks are definitely lost in loss record 1 of 2
==20949==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==20949==    by 0x10B645: read_all (cmd.c:140)
==20949==    by 0x10B727: cmd_fetch_output (cmd.c:174)
==20949==    by 0x10B5CD: cmd_update_state (cmd.c:119)
==20949==    by 0x10B9C0: cmdcol_update_state (cmdcol.c:67)
==20949==    by 0x10B1AE: main (test_cmd.c:487)
==20949== 
==20949== 4,335 bytes in 17 blocks are definitely lost in loss record 2 of 2
==20949==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==20949==    by 0x10B268: cmd_new (cmd.c:29)
==20949==    by 0x10B11D: main (test_cmd.c:480)
==20949== 
==20949== LEAK SUMMARY:
==20949==    definitely lost: 4,340 bytes in 22 blocks
==20949==    indirectly lost: 0 bytes in 0 blocks
==20949==      possibly lost: 0 bytes in 0 blocks
==20949==    still reachable: 0 bytes in 0 blocks
==20949==         suppressed: 0 bytes in 0 blocks
==20949== 
==20949== For lists of detected and suppressed errors, rerun with: -s
==20949== ERROR SUMMARY: 12 errors from 4 contexts (suppressed: 0 from 0)

