(TEST 5) ls on the test_data/stuff directory
COMMENTS:
Checks that ls produces the correct results when called on the
provided test_data/stuff directory.


program: ./commando --echo
Failure messages:
- FAILURE(139) due to Kill Signal from OS: likely a SEGFAULT occured
- FAILURE: Valgrind reports reachable memory, may need to add free() or fclose()
- FAILURE: Output Mismatch at lines marked

--- Side by Side Differences ---
- Expect output in: test-results/raw/commando-05-expect.tmp
- Actual output in: test-results/raw/commando-05-actual.tmp
- Differing lines have a character like '|' '>' or '<' in the middle
==== EXPECT ====                                                ==== ACTUAL ====                                             
@> ls -a -F test_data/stuff/                                  | @>
@> wait-for 0                                                 <
@> list                                                       <
JOB  #PID      STAT   STR_STAT OUTB COMMAND                   <
0    %0          0    EXIT(0)   55 ls -a -F test_data/stuff/  <
@> output-for 0                                               <
@<<< Output for ls[%0] (55 bytes):                            <
----------------------------------------                      <
./                                                            <
../                                                           <
empty                                                         <
gettysburg.txt                                                <
quote.txt                                                     <
table.sh*                                                     <
util.o                                                        <
----------------------------------------                      <
@> exit                                                       <
ALERTS:                                                         ALERTS:
@!!! ls[%0]: EXIT(0)                                          <
--- Line Differences ---
EXPECT:   1) @> ls -a -F test_data/stuff/
EXPECT:   2) @> wait-for 0
EXPECT:   3) @> list
EXPECT:   4) JOB  #PID      STAT   STR_STAT OUTB COMMAND
EXPECT:   5) 0    %0          0    EXIT(0)   55 ls -a -F test_data/stuff/ 
EXPECT:   6) @> output-for 0
EXPECT:   7) @<<< Output for ls[%0] (55 bytes):
EXPECT:   8) ----------------------------------------
EXPECT:   9) ./
EXPECT:  10) ../
EXPECT:  11) empty
EXPECT:  12) gettysburg.txt
EXPECT:  13) quote.txt
EXPECT:  14) table.sh*
EXPECT:  15) util.o
EXPECT:  16) ----------------------------------------
EXPECT:  17) @> exit
ACTUAL:   1) @>
EXPECT:  19) @!!! ls[%0]: EXIT(0)

--- Valgrind Log from: test-results/raw/commando-05-valgrd.tmp ---
==21147== Memcheck, a memory error detector
==21147== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==21147== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==21147== Command: ./commando --echo
==21147== Parent PID: 21146
==21147== 
==21147== Invalid write of size 1
==21147==    at 0x48DDA01: _IO_getline_info (iogetline.c:77)
==21147==    by 0x48DC849: fgets (iofgets.c:53)
==21147==    by 0x1095CC: main (commando.c:37)
==21147==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==21147== 
==21147== 
==21147== Process terminating with default action of signal 11 (SIGSEGV)
==21147==  Access not within mapped region at address 0x0
==21147==    at 0x48DDA01: _IO_getline_info (iogetline.c:77)
==21147==    by 0x48DC849: fgets (iofgets.c:53)
==21147==    by 0x1095CC: main (commando.c:37)
==21147==  If you believe this happened as a result of a stack
==21147==  overflow in your program's main thread (unlikely but
==21147==  possible), you can try to increase the size of the
==21147==  main thread stack using the --main-stacksize= flag.
==21147==  The main thread stack size used in this run was 8388608.
==21147== 
==21147== HEAP SUMMARY:
==21147==     in use at exit: 8,200 bytes in 1 blocks
==21147==   total heap usage: 1 allocs, 0 frees, 8,200 bytes allocated
==21147== 
==21147== 8,200 bytes in 1 blocks are still reachable in loss record 1 of 1
==21147==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==21147==    by 0x109599: main (commando.c:33)
==21147== 
==21147== LEAK SUMMARY:
==21147==    definitely lost: 0 bytes in 0 blocks
==21147==    indirectly lost: 0 bytes in 0 blocks
==21147==      possibly lost: 0 bytes in 0 blocks
==21147==    still reachable: 8,200 bytes in 1 blocks
==21147==         suppressed: 0 bytes in 0 blocks
==21147== 
==21147== For lists of detected and suppressed errors, rerun with: -s
==21147== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

