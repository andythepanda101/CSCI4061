==21519== Memcheck, a memory error detector
==21519== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==21519== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==21519== Command: ./commando --echo
==21519== Parent PID: 21518
==21519== 
==21519== Invalid write of size 1
==21519==    at 0x48DDA01: _IO_getline_info (iogetline.c:77)
==21519==    by 0x48DC849: fgets (iofgets.c:53)
==21519==    by 0x1095CC: main (commando.c:37)
==21519==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==21519== 
==21519== 
==21519== Process terminating with default action of signal 11 (SIGSEGV)
==21519==  Access not within mapped region at address 0x0
==21519==    at 0x48DDA01: _IO_getline_info (iogetline.c:77)
==21519==    by 0x48DC849: fgets (iofgets.c:53)
==21519==    by 0x1095CC: main (commando.c:37)
==21519==  If you believe this happened as a result of a stack
==21519==  overflow in your program's main thread (unlikely but
==21519==  possible), you can try to increase the size of the
==21519==  main thread stack using the --main-stacksize= flag.
==21519==  The main thread stack size used in this run was 8388608.
==21519== 
==21519== HEAP SUMMARY:
==21519==     in use at exit: 8,200 bytes in 1 blocks
==21519==   total heap usage: 1 allocs, 0 frees, 8,200 bytes allocated
==21519== 
==21519== 8,200 bytes in 1 blocks are still reachable in loss record 1 of 1
==21519==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==21519==    by 0x109599: main (commando.c:33)
==21519== 
==21519== LEAK SUMMARY:
==21519==    definitely lost: 0 bytes in 0 blocks
==21519==    indirectly lost: 0 bytes in 0 blocks
==21519==      possibly lost: 0 bytes in 0 blocks
==21519==    still reachable: 8,200 bytes in 1 blocks
==21519==         suppressed: 0 bytes in 0 blocks
==21519== 
==21519== For lists of detected and suppressed errors, rerun with: -s
==21519== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
