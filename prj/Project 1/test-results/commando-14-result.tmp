(TEST 14) pause builtin
COMMENTS:
Checks that the 'pause' builtin is implemented.


program: ./commando --echo
Failure messages:
- FAILURE(139) due to Kill Signal from OS: likely a SEGFAULT occured
- FAILURE: Valgrind reports reachable memory, may need to add free() or fclose()
- FAILURE: Output Mismatch at lines marked

--- Side by Side Differences ---
- Expect output in: test-results/raw/commando-14-expect.tmp
- Actual output in: test-results/raw/commando-14-actual.tmp
- Differing lines have a character like '|' '>' or '<' in the middle
==== EXPECT ====                              ==== ACTUAL ====                           
@> list                                     | @>
JOB  #PID      STAT   STR_STAT OUTB COMMAND <
@> pause 10000 0                            <
@> pause 0 1                                <
@> list                                     <
JOB  #PID      STAT   STR_STAT OUTB COMMAND <
@> exit                                     <
ALERTS:                                       ALERTS:
--- Line Differences ---
EXPECT:   1) @> list
EXPECT:   2) JOB  #PID      STAT   STR_STAT OUTB COMMAND
EXPECT:   3) @> pause 10000 0
EXPECT:   4) @> pause 0 1
EXPECT:   5) @> list
EXPECT:   6) JOB  #PID      STAT   STR_STAT OUTB COMMAND
EXPECT:   7) @> exit
ACTUAL:   1) @>

--- Valgrind Log from: test-results/raw/commando-14-valgrd.tmp ---
==21426== Memcheck, a memory error detector
==21426== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==21426== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==21426== Command: ./commando --echo
==21426== Parent PID: 21425
==21426== 
==21426== Invalid write of size 1
==21426==    at 0x48DDA01: _IO_getline_info (iogetline.c:77)
==21426==    by 0x48DC849: fgets (iofgets.c:53)
==21426==    by 0x1095CC: main (commando.c:37)
==21426==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==21426== 
==21426== 
==21426== Process terminating with default action of signal 11 (SIGSEGV)
==21426==  Access not within mapped region at address 0x0
==21426==    at 0x48DDA01: _IO_getline_info (iogetline.c:77)
==21426==    by 0x48DC849: fgets (iofgets.c:53)
==21426==    by 0x1095CC: main (commando.c:37)
==21426==  If you believe this happened as a result of a stack
==21426==  overflow in your program's main thread (unlikely but
==21426==  possible), you can try to increase the size of the
==21426==  main thread stack using the --main-stacksize= flag.
==21426==  The main thread stack size used in this run was 8388608.
==21426== 
==21426== HEAP SUMMARY:
==21426==     in use at exit: 8,200 bytes in 1 blocks
==21426==   total heap usage: 1 allocs, 0 frees, 8,200 bytes allocated
==21426== 
==21426== 8,200 bytes in 1 blocks are still reachable in loss record 1 of 1
==21426==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==21426==    by 0x109599: main (commando.c:33)
==21426== 
==21426== LEAK SUMMARY:
==21426==    definitely lost: 0 bytes in 0 blocks
==21426==    indirectly lost: 0 bytes in 0 blocks
==21426==      possibly lost: 0 bytes in 0 blocks
==21426==    still reachable: 8,200 bytes in 1 blocks
==21426==         suppressed: 0 bytes in 0 blocks
==21426== 
==21426== For lists of detected and suppressed errors, rerun with: -s
==21426== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

